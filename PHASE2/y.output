State 31 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 122 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: prog

    2 prog: function prog
    3     | %empty

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    5 declaration: identifierloop COLON INTEGER
    6            | identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    7 declarationloop: declaration SEMICOLON declarationloop
    8                | %empty

    9 statement: var ASSIGN expression
   10          | IF bool_exp THEN statementloop ENDIF
   11          | IF bool_exp THEN statementloop ELSE statementloop ENDIF
   12          | WHILE bool_exp BEGINLOOP statementloop ENDLOOP
   13          | DO BEGINLOOP statementloop ENDLOOP WHILE bool_exp
   14          | FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP
   15          | READ varloop
   16          | WRITE varloop
   17          | CONTINUE
   18          | RETURN expression

   19 statementloop: statement SEMICOLON statementloop
   20              | statement SEMICOLON

   21 bool_exp: relation_and_exp OR bool_exp
   22         | relation_and_exp

   23 relation_and_exp: relation_exp AND relation_and_exp
   24                 | relation_exp

   25 relation_exp: notloop expression comp expression
   26             | TRUE
   27             | FALSE
   28             | L_PAREN bool_exp R_PAREN

   29 notloop: NOT notloop
   30        | %empty

   31 comp: EQ
   32     | NEQ
   33     | LT
   34     | GT
   35     | LTE
   36     | GTE

   37 expression: multiplicative_expression
   38           | multiplicative_expression ADD expression
   39           | multiplicative_expression SUB expression

   40 multiplicative_expression: term
   41                          | term MULT multiplicative_expression
   42                          | term DIV multiplicative_expression
   43                          | term MOD multiplicative_expression

   44 term: SUB term_num
   45     | term_num
   46     | identifier L_PAREN expressionloop R_PAREN

   47 term_num: var
   48         | number
   49         | L_PAREN expression R_PAREN

   50 varloop: var
   51        | var COMMA varloop

   52 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier

   54 number: NUMBER

   55 expressionloop: expression COMMA expressionloop
   56               | expression
   57               | %empty

   58 identifier: IDENT

   59 identifierloop: identifier COMMA identifierloop
   60               | identifier


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER <num> (258) 54
    IDENT <ident> (259) 58
    FUNCTION (260) 4
    BEGIN_PARAMS (261) 4
    END_PARAMS (262) 4
    BEGIN_LOCALS (263) 4
    END_LOCALS (264) 4
    BEGIN_BODY (265) 4
    END_BODY (266) 4
    INTEGER (267) 5 6
    ARRAY (268) 6
    OF (269) 6
    IF (270) 10 11
    THEN (271) 10 11
    ENDIF (272) 10 11
    ELSE (273) 11
    WHILE (274) 12 13
    DO (275) 13
    FOR (276) 14
    BEGINLOOP (277) 12 13 14
    ENDLOOP (278) 12 13 14
    CONTINUE (279) 17
    READ (280) 15
    WRITE (281) 16
    TRUE (282) 26
    FALSE (283) 27
    RETURN (284) 18
    SEMICOLON (285) 4 7 14 19 20
    COLON (286) 5 6
    COMMA (287) 51 55 59
    L_PAREN (288) 28 46 49
    R_PAREN (289) 28 46 49
    L_SQUARE_BRACKET (290) 6 52
    R_SQUARE_BRACKET (291) 6 52
    MULT (292) 41
    DIV (293) 42
    MOD (294) 43
    SUB (295) 39 44
    ADD (296) 38
    LT (297) 33
    LTE (298) 35
    GT (299) 34
    GTE (300) 36
    EQ (301) 31
    NEQ (302) 32
    NOT (303) 29
    AND (304) 23
    OR (305) 21
    ASSIGN (306) 9 14


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    prog_start (53)
        on left: 1
        on right: 0
    prog (54)
        on left: 2 3
        on right: 1 2
    function (55)
        on left: 4
        on right: 2
    declaration (56)
        on left: 5 6
        on right: 7
    declarationloop (57)
        on left: 7 8
        on right: 4 7
    statement (58)
        on left: 9 10 11 12 13 14 15 16 17 18
        on right: 19 20
    statementloop (59)
        on left: 19 20
        on right: 4 10 11 12 13 14 19
    bool_exp (60)
        on left: 21 22
        on right: 10 11 12 13 14 21 28
    relation_and_exp (61)
        on left: 23 24
        on right: 21 22 23
    relation_exp (62)
        on left: 25 26 27 28
        on right: 23 24
    notloop (63)
        on left: 29 30
        on right: 25 29
    comp (64)
        on left: 31 32 33 34 35 36
        on right: 25
    expression (65)
        on left: 37 38 39
        on right: 9 14 18 25 38 39 49 52 55 56
    multiplicative_expression (66)
        on left: 40 41 42 43
        on right: 37 38 39 41 42 43
    term (67)
        on left: 44 45 46
        on right: 40 41 42 43
    term_num (68)
        on left: 47 48 49
        on right: 44 45
    varloop (69)
        on left: 50 51
        on right: 15 16 51
    var (70)
        on left: 52 53
        on right: 9 14 47 50 51
    number (71)
        on left: 54
        on right: 6 14 48
    expressionloop (72)
        on left: 55 56 57
        on right: 46 55
    identifier (73)
        on left: 58
        on right: 4 46 52 53 59 60
    identifierloop (74)
        on left: 59 60
        on right: 5 6 59


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (prog)

    prog_start  go to state 2
    prog        go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: prog .

    $default  reduce using rule 1 (prog_start)


State 4

    2 prog: function . prog

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (prog)

    prog      go to state 8
    function  go to state 4


State 5

   58 identifier: IDENT .

    $default  reduce using rule 58 (identifier)


State 6

    4 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 prog: function prog .

    $default  reduce using rule 2 (prog)


State 9

    4 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarationloop)

    declaration      go to state 11
    declarationloop  go to state 12
    identifier       go to state 13
    identifierloop   go to state 14


State 11

    7 declarationloop: declaration . SEMICOLON declarationloop

    SEMICOLON  shift, and go to state 15


State 12

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop . END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    END_PARAMS  shift, and go to state 16


State 13

   59 identifierloop: identifier . COMMA identifierloop
   60               | identifier .

    COMMA  shift, and go to state 17

    $default  reduce using rule 60 (identifierloop)


State 14

    5 declaration: identifierloop . COLON INTEGER
    6            | identifierloop . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 15

    7 declarationloop: declaration SEMICOLON . declarationloop

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarationloop)

    declaration      go to state 11
    declarationloop  go to state 19
    identifier       go to state 13
    identifierloop   go to state 14


State 16

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS . BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

   59 identifierloop: identifier COMMA . identifierloop

    IDENT  shift, and go to state 5

    identifier      go to state 13
    identifierloop  go to state 21


State 18

    5 declaration: identifierloop COLON . INTEGER
    6            | identifierloop COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 19

    7 declarationloop: declaration SEMICOLON declarationloop .

    $default  reduce using rule 7 (declarationloop)


State 20

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS . declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarationloop)

    declaration      go to state 11
    declarationloop  go to state 24
    identifier       go to state 13
    identifierloop   go to state 14


State 21

   59 identifierloop: identifier COMMA identifierloop .

    $default  reduce using rule 59 (identifierloop)


State 22

    5 declaration: identifierloop COLON INTEGER .

    $default  reduce using rule 5 (declaration)


State 23

    6 declaration: identifierloop COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 24

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop . END_LOCALS BEGIN_BODY statementloop END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    6 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27

    number  go to state 28


State 26

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS . BEGIN_BODY statementloop END_BODY

    BEGIN_BODY  shift, and go to state 29


State 27

   54 number: NUMBER .

    $default  reduce using rule 54 (number)


State 28

    6 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY . statementloop END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOR       shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement      go to state 39
    statementloop  go to state 40
    var            go to state 41
    identifier     go to state 42


State 30

    6 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 31

   10 statement: IF . bool_exp THEN statementloop ENDIF
   11          | IF . bool_exp THEN statementloop ELSE statementloop ENDIF

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (notloop)]
    $default  reduce using rule 30 (notloop)

    bool_exp          go to state 48
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    notloop           go to state 51


State 32

   12 statement: WHILE . bool_exp BEGINLOOP statementloop ENDLOOP

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (notloop)]
    $default  reduce using rule 30 (notloop)

    bool_exp          go to state 52
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    notloop           go to state 51


State 33

   13 statement: DO . BEGINLOOP statementloop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 53


State 34

   14 statement: FOR . var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    IDENT  shift, and go to state 5

    var         go to state 54
    identifier  go to state 42


State 35

   17 statement: CONTINUE .

    $default  reduce using rule 17 (statement)


State 36

   15 statement: READ . varloop

    IDENT  shift, and go to state 5

    varloop     go to state 55
    var         go to state 56
    identifier  go to state 42


State 37

   16 statement: WRITE . varloop

    IDENT  shift, and go to state 5

    varloop     go to state 57
    var         go to state 56
    identifier  go to state 42


State 38

   18 statement: RETURN . expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 39

   19 statementloop: statement . SEMICOLON statementloop
   20              | statement . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 40

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop . END_BODY

    END_BODY  shift, and go to state 68


State 41

    9 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 42

   52 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier .

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 53 (var)


State 43

    6 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 71


State 44

   26 relation_exp: TRUE .

    $default  reduce using rule 26 (relation_exp)


State 45

   27 relation_exp: FALSE .

    $default  reduce using rule 27 (relation_exp)


State 46

   28 relation_exp: L_PAREN . bool_exp R_PAREN

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (notloop)]
    $default  reduce using rule 30 (notloop)

    bool_exp          go to state 72
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    notloop           go to state 51


State 47

   29 notloop: NOT . notloop

    NOT  shift, and go to state 47

    $default  reduce using rule 30 (notloop)

    notloop  go to state 73


State 48

   10 statement: IF bool_exp . THEN statementloop ENDIF
   11          | IF bool_exp . THEN statementloop ELSE statementloop ENDIF

    THEN  shift, and go to state 74


State 49

   21 bool_exp: relation_and_exp . OR bool_exp
   22         | relation_and_exp .

    OR  shift, and go to state 75

    $default  reduce using rule 22 (bool_exp)


State 50

   23 relation_and_exp: relation_exp . AND relation_and_exp
   24                 | relation_exp .

    AND  shift, and go to state 76

    $default  reduce using rule 24 (relation_and_exp)


State 51

   25 relation_exp: notloop . expression comp expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 77
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 52

   12 statement: WHILE bool_exp . BEGINLOOP statementloop ENDLOOP

    BEGINLOOP  shift, and go to state 78


State 53

   13 statement: DO BEGINLOOP . statementloop ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOR       shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement      go to state 39
    statementloop  go to state 79
    var            go to state 41
    identifier     go to state 42


State 54

   14 statement: FOR var . ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    ASSIGN  shift, and go to state 80


State 55

   15 statement: READ varloop .

    $default  reduce using rule 15 (statement)


State 56

   50 varloop: var .
   51        | var . COMMA varloop

    COMMA  shift, and go to state 81

    $default  reduce using rule 50 (varloop)


State 57

   16 statement: WRITE varloop .

    $default  reduce using rule 16 (statement)


State 58

   49 term_num: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 82
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 59

   44 term: SUB . term_num

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58

    term_num    go to state 83
    var         go to state 64
    number      go to state 65
    identifier  go to state 42


State 60

   18 statement: RETURN expression .

    $default  reduce using rule 18 (statement)


State 61

   37 expression: multiplicative_expression .
   38           | multiplicative_expression . ADD expression
   39           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 84
    ADD  shift, and go to state 85

    $default  reduce using rule 37 (expression)


State 62

   40 multiplicative_expression: term .
   41                          | term . MULT multiplicative_expression
   42                          | term . DIV multiplicative_expression
   43                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 40 (multiplicative_expression)


State 63

   45 term: term_num .

    $default  reduce using rule 45 (term)


State 64

   47 term_num: var .

    $default  reduce using rule 47 (term_num)


State 65

   48 term_num: number .

    $default  reduce using rule 48 (term_num)


State 66

   46 term: identifier . L_PAREN expressionloop R_PAREN
   52 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier .

    L_PAREN           shift, and go to state 89
    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 53 (var)


State 67

   19 statementloop: statement SEMICOLON . statementloop
   20              | statement SEMICOLON .

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOR       shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 20 (statementloop)

    statement      go to state 39
    statementloop  go to state 90
    var            go to state 41
    identifier     go to state 42


State 68

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY .

    $default  reduce using rule 4 (function)


State 69

    9 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 91
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 70

   52 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 92
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 71

    6 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (declaration)


State 72

   28 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 93


State 73

   29 notloop: NOT notloop .

    $default  reduce using rule 29 (notloop)


State 74

   10 statement: IF bool_exp THEN . statementloop ENDIF
   11          | IF bool_exp THEN . statementloop ELSE statementloop ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOR       shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement      go to state 39
    statementloop  go to state 94
    var            go to state 41
    identifier     go to state 42


State 75

   21 bool_exp: relation_and_exp OR . bool_exp

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (notloop)]
    $default  reduce using rule 30 (notloop)

    bool_exp          go to state 95
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    notloop           go to state 51


State 76

   23 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (notloop)]
    $default  reduce using rule 30 (notloop)

    relation_and_exp  go to state 96
    relation_exp      go to state 50
    notloop           go to state 51


State 77

   25 relation_exp: notloop expression . comp expression

    LT   shift, and go to state 97
    LTE  shift, and go to state 98
    GT   shift, and go to state 99
    GTE  shift, and go to state 100
    EQ   shift, and go to state 101
    NEQ  shift, and go to state 102

    comp  go to state 103


State 78

   12 statement: WHILE bool_exp BEGINLOOP . statementloop ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOR       shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement      go to state 39
    statementloop  go to state 104
    var            go to state 41
    identifier     go to state 42


State 79

   13 statement: DO BEGINLOOP statementloop . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 105


State 80

   14 statement: FOR var ASSIGN . number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    NUMBER  shift, and go to state 27

    number  go to state 106


State 81

   51 varloop: var COMMA . varloop

    IDENT  shift, and go to state 5

    varloop     go to state 107
    var         go to state 56
    identifier  go to state 42


State 82

   49 term_num: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 83

   44 term: SUB term_num .

    $default  reduce using rule 44 (term)


State 84

   39 expression: multiplicative_expression SUB . expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 109
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 85

   38 expression: multiplicative_expression ADD . expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 110
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 86

   41 multiplicative_expression: term MULT . multiplicative_expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    multiplicative_expression  go to state 111
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 87

   42 multiplicative_expression: term DIV . multiplicative_expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    multiplicative_expression  go to state 112
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 88

   43 multiplicative_expression: term MOD . multiplicative_expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    multiplicative_expression  go to state 113
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 89

   46 term: identifier L_PAREN . expressionloop R_PAREN

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    $default  reduce using rule 57 (expressionloop)

    expression                 go to state 114
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    expressionloop             go to state 115
    identifier                 go to state 66


State 90

   19 statementloop: statement SEMICOLON statementloop .

    $default  reduce using rule 19 (statementloop)


State 91

    9 statement: var ASSIGN expression .

    $default  reduce using rule 9 (statement)


State 92

   52 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 116


State 93

   28 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 28 (relation_exp)


State 94

   10 statement: IF bool_exp THEN statementloop . ENDIF
   11          | IF bool_exp THEN statementloop . ELSE statementloop ENDIF

    ENDIF  shift, and go to state 117
    ELSE   shift, and go to state 118


State 95

   21 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 21 (bool_exp)


State 96

   23 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 23 (relation_and_exp)


State 97

   33 comp: LT .

    $default  reduce using rule 33 (comp)


State 98

   35 comp: LTE .

    $default  reduce using rule 35 (comp)


State 99

   34 comp: GT .

    $default  reduce using rule 34 (comp)


State 100

   36 comp: GTE .

    $default  reduce using rule 36 (comp)


State 101

   31 comp: EQ .

    $default  reduce using rule 31 (comp)


State 102

   32 comp: NEQ .

    $default  reduce using rule 32 (comp)


State 103

   25 relation_exp: notloop expression comp . expression

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 119
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 104

   12 statement: WHILE bool_exp BEGINLOOP statementloop . ENDLOOP

    ENDLOOP  shift, and go to state 120


State 105

   13 statement: DO BEGINLOOP statementloop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 121


State 106

   14 statement: FOR var ASSIGN number . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    SEMICOLON  shift, and go to state 122


State 107

   51 varloop: var COMMA varloop .

    $default  reduce using rule 51 (varloop)


State 108

   49 term_num: L_PAREN expression R_PAREN .

    $default  reduce using rule 49 (term_num)


State 109

   39 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 39 (expression)


State 110

   38 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 38 (expression)


State 111

   41 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 41 (multiplicative_expression)


State 112

   42 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 113

   43 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 43 (multiplicative_expression)


State 114

   55 expressionloop: expression . COMMA expressionloop
   56               | expression .

    COMMA  shift, and go to state 123

    $default  reduce using rule 56 (expressionloop)


State 115

   46 term: identifier L_PAREN expressionloop . R_PAREN

    R_PAREN  shift, and go to state 124


State 116

   52 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 52 (var)


State 117

   10 statement: IF bool_exp THEN statementloop ENDIF .

    $default  reduce using rule 10 (statement)


State 118

   11 statement: IF bool_exp THEN statementloop ELSE . statementloop ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOR       shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement      go to state 39
    statementloop  go to state 125
    var            go to state 41
    identifier     go to state 42


State 119

   25 relation_exp: notloop expression comp expression .

    $default  reduce using rule 25 (relation_exp)


State 120

   12 statement: WHILE bool_exp BEGINLOOP statementloop ENDLOOP .

    $default  reduce using rule 12 (statement)


State 121

   13 statement: DO BEGINLOOP statementloop ENDLOOP WHILE . bool_exp

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (notloop)]
    $default  reduce using rule 30 (notloop)

    bool_exp          go to state 126
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    notloop           go to state 51


State 122

   14 statement: FOR var ASSIGN number SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47

    L_PAREN   [reduce using rule 30 (notloop)]
    $default  reduce using rule 30 (notloop)

    bool_exp          go to state 127
    relation_and_exp  go to state 49
    relation_exp      go to state 50
    notloop           go to state 51


State 123

   55 expressionloop: expression COMMA . expressionloop

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    $default  reduce using rule 57 (expressionloop)

    expression                 go to state 114
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    expressionloop             go to state 128
    identifier                 go to state 66


State 124

   46 term: identifier L_PAREN expressionloop R_PAREN .

    $default  reduce using rule 46 (term)


State 125

   11 statement: IF bool_exp THEN statementloop ELSE statementloop . ENDIF

    ENDIF  shift, and go to state 129


State 126

   13 statement: DO BEGINLOOP statementloop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 13 (statement)


State 127

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    SEMICOLON  shift, and go to state 130


State 128

   55 expressionloop: expression COMMA expressionloop .

    $default  reduce using rule 55 (expressionloop)


State 129

   11 statement: IF bool_exp THEN statementloop ELSE statementloop ENDIF .

    $default  reduce using rule 11 (statement)


State 130

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    IDENT  shift, and go to state 5

    var         go to state 131
    identifier  go to state 42


State 131

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statementloop ENDLOOP

    ASSIGN  shift, and go to state 132


State 132

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statementloop ENDLOOP

    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 5
    L_PAREN  shift, and go to state 58
    SUB      shift, and go to state 59

    expression                 go to state 133
    multiplicative_expression  go to state 61
    term                       go to state 62
    term_num                   go to state 63
    var                        go to state 64
    number                     go to state 65
    identifier                 go to state 66


State 133

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statementloop ENDLOOP

    BEGINLOOP  shift, and go to state 134


State 134

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statementloop ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOR       shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement      go to state 39
    statementloop  go to state 135
    var            go to state 41
    identifier     go to state 42


State 135

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 136

   14 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP .

    $default  reduce using rule 14 (statement)
