Grammar

    0 $accept: prog_start $end

    1 prog_start: progInner

    2 progInner: function progInner
    3          | %empty

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    5 addFunc: ident

    6 ident: IDENT

    7 funcInnerParams: declaration SEMICOLON funcInnerParams
    8                | %empty

    9 funcInnerLocals: declaration SEMICOLON funcInnerLocals
   10                | %empty

   11 funcInnerTwo: statement SEMICOLON funcInnerTwo
   12             | %empty

   13 declaration: decInner COLON INTEGER
   14            | decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 decInner: ident
   16         | ident COMMA decInner

   17 statement: var ASSIGN expression
   18          | IF bool_expr THEN stateInnerOne ENDIF
   19          | IF bool_expr THEN stateInnerOne ELSE stateInnerOne ENDIF
   20          | WHILE bool_expr BEGINLOOP stateInnerOne ENDLOOP
   21          | DO BEGINLOOP stateInnerOne ENDLOOP WHILE bool_expr
   22          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP
   23          | READ stateInnerTwo
   24          | WRITE stateInnerTwo
   25          | CONTINUE
   26          | RETURN expression

   27 stateInnerOne: statement SEMICOLON stateInnerOne
   28              | statement SEMICOLON

   29 stateInnerTwo: var
   30              | var COMMA stateInnerTwo

   31 bool_expr: relation_and_expr
   32          | relation_and_expr OR bool_expr

   33 relation_and_expr: relation_expr
   34                  | relation_expr AND relation_and_expr

   35 relation_expr: expression comp expression
   36              | TRUE
   37              | FALSE
   38              | L_PAREN bool_expr R_PAREN
   39              | NOT expression comp expression
   40              | NOT TRUE
   41              | NOT FALSE
   42              | NOT L_PAREN bool_expr R_PAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | LTE
   48     | GTE

   49 expression: multiplicative_expr
   50           | multiplicative_expr ADD expression
   51           | multiplicative_expr SUB expression

   52 multiplicative_expr: term
   53                    | term MULT multiplicative_expr
   54                    | term DIV multiplicative_expr
   55                    | term MOD multiplicative_expr

   56 term: var
   57     | NUMBER
   58     | L_PAREN expression R_PAREN
   59     | SUB var
   60     | SUB NUMBER
   61     | SUB L_PAREN expression R_PAREN
   62     | ident L_PAREN termInnerOne R_PAREN

   63 termInnerOne: expression COMMA termInnerOne
   64             | expression
   65             | %empty

   66 var: ident
   67    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 13 14
ARRAY (266) 14
OF (267) 14
IF (268) 18 19
THEN (269) 18 19
ENDIF (270) 18 19
ELSE (271) 19
FOR (272) 22
WHILE (273) 20 21
DO (274) 21
BEGINLOOP (275) 20 21 22
ENDLOOP (276) 20 21 22
CONTINUE (277) 25
READ (278) 23
WRITE (279) 24
AND (280) 34
OR (281) 32
NOT (282) 39 40 41 42
TRUE (283) 36 40
FALSE (284) 37 41
RETURN (285) 26
SUB (286) 51 59 60 61
ADD (287) 50
MULT (288) 53
DIV (289) 54
MOD (290) 55
EQ (291) 43
NEQ (292) 44
LT (293) 45
GT (294) 46
LTE (295) 47
GTE (296) 48
SEMICOLON (297) 4 7 9 11 22 27 28
COLON (298) 13 14
COMMA (299) 16 30 63
L_PAREN (300) 38 42 58 61 62
R_PAREN (301) 38 42 58 61 62
L_SQUARE_BRACKET (302) 14 67
R_SQUARE_BRACKET (303) 14 67
ASSIGN (304) 17 22
NUMBER (305) 14 22 57 60
IDENT (306) 6


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
progInner (54)
    on left: 2 3, on right: 1 2
function (55)
    on left: 4, on right: 2
addFunc (56)
    on left: 5, on right: 4
ident (57)
    on left: 6, on right: 5 15 16 62 66 67
funcInnerParams (58)
    on left: 7 8, on right: 4 7
funcInnerLocals (59)
    on left: 9 10, on right: 4 9
funcInnerTwo (60)
    on left: 11 12, on right: 4 11
declaration (61)
    on left: 13 14, on right: 7 9
decInner (62)
    on left: 15 16, on right: 13 14 16
statement (63)
    on left: 17 18 19 20 21 22 23 24 25 26, on right: 11 27 28
stateInnerOne (64)
    on left: 27 28, on right: 18 19 20 21 22 27
stateInnerTwo (65)
    on left: 29 30, on right: 23 24 30
bool_expr (66)
    on left: 31 32, on right: 18 19 20 21 22 32 38 42
relation_and_expr (67)
    on left: 33 34, on right: 31 32 34
relation_expr (68)
    on left: 35 36 37 38 39 40 41 42, on right: 33 34
comp (69)
    on left: 43 44 45 46 47 48, on right: 35 39
expression (70)
    on left: 49 50 51, on right: 17 22 26 35 39 50 51 58 61 63 64 67
multiplicative_expr (71)
    on left: 52 53 54 55, on right: 49 50 51 53 54 55
term (72)
    on left: 56 57 58 59 60 61 62, on right: 52 53 54 55
termInnerOne (73)
    on left: 63 64 65, on right: 62 63
var (74)
    on left: 66 67, on right: 17 22 29 30 56 59


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (progInner)

    prog_start  go to state 2
    progInner   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    IDENT  shift, and go to state 5

    addFunc  go to state 6
    ident    go to state 7


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 3

    1 prog_start: progInner .

    $default  reduce using rule 1 (prog_start)


State 4

    2 progInner: function . progInner

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (progInner)

    progInner  go to state 9
    function   go to state 4


State 5

    6 ident: IDENT .

    $default  reduce using rule 6 (ident)


State 6

    4 function: FUNCTION addFunc . SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    SEMICOLON  shift, and go to state 10


State 7

    5 addFunc: ident .

    $default  reduce using rule 5 (addFunc)


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    2 progInner: function progInner .

    $default  reduce using rule 2 (progInner)


State 10

    4 function: FUNCTION addFunc SEMICOLON . BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS . funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (funcInnerParams)

    ident            go to state 12
    funcInnerParams  go to state 13
    declaration      go to state 14
    decInner         go to state 15


State 12

   15 decInner: ident .
   16         | ident . COMMA decInner

    COMMA  shift, and go to state 16

    $default  reduce using rule 15 (decInner)


State 13

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams . END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    7 funcInnerParams: declaration . SEMICOLON funcInnerParams

    SEMICOLON  shift, and go to state 18


State 15

   13 declaration: decInner . COLON INTEGER
   14            | decInner . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   16 decInner: ident COMMA . decInner

    IDENT  shift, and go to state 5

    ident     go to state 12
    decInner  go to state 20


State 17

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS . BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 18

    7 funcInnerParams: declaration SEMICOLON . funcInnerParams

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (funcInnerParams)

    ident            go to state 12
    funcInnerParams  go to state 22
    declaration      go to state 14
    decInner         go to state 15


State 19

   13 declaration: decInner COLON . INTEGER
   14            | decInner COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   16 decInner: ident COMMA decInner .

    $default  reduce using rule 16 (decInner)


State 21

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS . funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 10 (funcInnerLocals)

    ident            go to state 12
    funcInnerLocals  go to state 25
    declaration      go to state 26
    decInner         go to state 15


State 22

    7 funcInnerParams: declaration SEMICOLON funcInnerParams .

    $default  reduce using rule 7 (funcInnerParams)


State 23

   13 declaration: decInner COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 24

   14 declaration: decInner COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals . END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    END_LOCALS  shift, and go to state 28


State 26

    9 funcInnerLocals: declaration . SEMICOLON funcInnerLocals

    SEMICOLON  shift, and go to state 29


State 27

   14 declaration: decInner COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 28

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS . BEGIN_BODY funcInnerTwo END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

    9 funcInnerLocals: declaration SEMICOLON . funcInnerLocals

    IDENT  shift, and go to state 5

    $default  reduce using rule 10 (funcInnerLocals)

    ident            go to state 12
    funcInnerLocals  go to state 32
    declaration      go to state 26
    decInner         go to state 15


State 30

   14 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 31

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY . funcInnerTwo END_BODY

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (funcInnerTwo)

    ident         go to state 42
    funcInnerTwo  go to state 43
    statement     go to state 44
    var           go to state 45


State 32

    9 funcInnerLocals: declaration SEMICOLON funcInnerLocals .

    $default  reduce using rule 9 (funcInnerLocals)


State 33

   14 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 46


State 34

   18 statement: IF . bool_expr THEN stateInnerOne ENDIF
   19          | IF . bool_expr THEN stateInnerOne ELSE stateInnerOne ENDIF

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    bool_expr            go to state 54
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 35

   22 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 42
    var    go to state 61


State 36

   20 statement: WHILE . bool_expr BEGINLOOP stateInnerOne ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    bool_expr            go to state 62
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 37

   21 statement: DO . BEGINLOOP stateInnerOne ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 63


State 38

   25 statement: CONTINUE .

    $default  reduce using rule 25 (statement)


State 39

   23 statement: READ . stateInnerTwo

    IDENT  shift, and go to state 5

    ident          go to state 42
    stateInnerTwo  go to state 64
    var            go to state 65


State 40

   24 statement: WRITE . stateInnerTwo

    IDENT  shift, and go to state 5

    ident          go to state 42
    stateInnerTwo  go to state 66
    var            go to state 65


State 41

   26 statement: RETURN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 68
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 42

   66 var: ident .
   67    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 66 (var)


State 43

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo . END_BODY

    END_BODY  shift, and go to state 70


State 44

   11 funcInnerTwo: statement . SEMICOLON funcInnerTwo

    SEMICOLON  shift, and go to state 71


State 45

   17 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 72


State 46

   14 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 47

   39 relation_expr: NOT . expression comp expression
   40              | NOT . TRUE
   41              | NOT . FALSE
   42              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 74
    FALSE    shift, and go to state 75
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 77
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 48

   36 relation_expr: TRUE .

    $default  reduce using rule 36 (relation_expr)


State 49

   37 relation_expr: FALSE .

    $default  reduce using rule 37 (relation_expr)


State 50

   59 term: SUB . var
   60     | SUB . NUMBER
   61     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 78
    NUMBER   shift, and go to state 79
    IDENT    shift, and go to state 5

    ident  go to state 42
    var    go to state 80


State 51

   38 relation_expr: L_PAREN . bool_expr R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    bool_expr            go to state 81
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 82
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 52

   57 term: NUMBER .

    $default  reduce using rule 57 (term)


State 53

   62 term: ident . L_PAREN termInnerOne R_PAREN
   66 var: ident .
   67    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 83
    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 66 (var)


State 54

   18 statement: IF bool_expr . THEN stateInnerOne ENDIF
   19          | IF bool_expr . THEN stateInnerOne ELSE stateInnerOne ENDIF

    THEN  shift, and go to state 84


State 55

   31 bool_expr: relation_and_expr .
   32          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 85

    $default  reduce using rule 31 (bool_expr)


State 56

   33 relation_and_expr: relation_expr .
   34                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 86

    $default  reduce using rule 33 (relation_and_expr)


State 57

   35 relation_expr: expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 93


State 58

   49 expression: multiplicative_expr .
   50           | multiplicative_expr . ADD expression
   51           | multiplicative_expr . SUB expression

    SUB  shift, and go to state 94
    ADD  shift, and go to state 95

    $default  reduce using rule 49 (expression)


State 59

   52 multiplicative_expr: term .
   53                    | term . MULT multiplicative_expr
   54                    | term . DIV multiplicative_expr
   55                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 52 (multiplicative_expr)


State 60

   56 term: var .

    $default  reduce using rule 56 (term)


State 61

   22 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    ASSIGN  shift, and go to state 99


State 62

   20 statement: WHILE bool_expr . BEGINLOOP stateInnerOne ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 63

   21 statement: DO BEGINLOOP . stateInnerOne ENDLOOP WHILE bool_expr

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    ident          go to state 42
    statement      go to state 101
    stateInnerOne  go to state 102
    var            go to state 45


State 64

   23 statement: READ stateInnerTwo .

    $default  reduce using rule 23 (statement)


State 65

   29 stateInnerTwo: var .
   30              | var . COMMA stateInnerTwo

    COMMA  shift, and go to state 103

    $default  reduce using rule 29 (stateInnerTwo)


State 66

   24 statement: WRITE stateInnerTwo .

    $default  reduce using rule 24 (statement)


State 67

   58 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 104
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 68

   26 statement: RETURN expression .

    $default  reduce using rule 26 (statement)


State 69

   67 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 105
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 70

    4 function: FUNCTION addFunc SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY .

    $default  reduce using rule 4 (function)


State 71

   11 funcInnerTwo: statement SEMICOLON . funcInnerTwo

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    $default  reduce using rule 12 (funcInnerTwo)

    ident         go to state 42
    funcInnerTwo  go to state 106
    statement     go to state 44
    var           go to state 45


State 72

   17 statement: var ASSIGN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 107
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 73

   14 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (declaration)


State 74

   40 relation_expr: NOT TRUE .

    $default  reduce using rule 40 (relation_expr)


State 75

   41 relation_expr: NOT FALSE .

    $default  reduce using rule 41 (relation_expr)


State 76

   42 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    bool_expr            go to state 108
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 82
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 77

   39 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 109


State 78

   61 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 110
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 79

   60 term: SUB NUMBER .

    $default  reduce using rule 60 (term)


State 80

   59 term: SUB var .

    $default  reduce using rule 59 (term)


State 81

   38 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 111


State 82

   35 relation_expr: expression . comp expression
   58 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    LTE      shift, and go to state 91
    GTE      shift, and go to state 92
    R_PAREN  shift, and go to state 112

    comp  go to state 93


State 83

   62 term: ident L_PAREN . termInnerOne R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    $default  reduce using rule 65 (termInnerOne)

    ident                go to state 53
    expression           go to state 113
    multiplicative_expr  go to state 58
    term                 go to state 59
    termInnerOne         go to state 114
    var                  go to state 60


State 84

   18 statement: IF bool_expr THEN . stateInnerOne ENDIF
   19          | IF bool_expr THEN . stateInnerOne ELSE stateInnerOne ENDIF

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    ident          go to state 42
    statement      go to state 101
    stateInnerOne  go to state 115
    var            go to state 45


State 85

   32 bool_expr: relation_and_expr OR . bool_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    bool_expr            go to state 116
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 86

   34 relation_and_expr: relation_expr AND . relation_and_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    relation_and_expr    go to state 117
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 87

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 88

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 89

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 90

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 91

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


State 92

   48 comp: GTE .

    $default  reduce using rule 48 (comp)


State 93

   35 relation_expr: expression comp . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 118
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 94

   51 expression: multiplicative_expr SUB . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 119
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 95

   50 expression: multiplicative_expr ADD . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 120
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 96

   53 multiplicative_expr: term MULT . multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    multiplicative_expr  go to state 121
    term                 go to state 59
    var                  go to state 60


State 97

   54 multiplicative_expr: term DIV . multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    multiplicative_expr  go to state 122
    term                 go to state 59
    var                  go to state 60


State 98

   55 multiplicative_expr: term MOD . multiplicative_expr

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    multiplicative_expr  go to state 123
    term                 go to state 59
    var                  go to state 60


State 99

   22 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    NUMBER  shift, and go to state 124


State 100

   20 statement: WHILE bool_expr BEGINLOOP . stateInnerOne ENDLOOP

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    ident          go to state 42
    statement      go to state 101
    stateInnerOne  go to state 125
    var            go to state 45


State 101

   27 stateInnerOne: statement . SEMICOLON stateInnerOne
   28              | statement . SEMICOLON

    SEMICOLON  shift, and go to state 126


State 102

   21 statement: DO BEGINLOOP stateInnerOne . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 127


State 103

   30 stateInnerTwo: var COMMA . stateInnerTwo

    IDENT  shift, and go to state 5

    ident          go to state 42
    stateInnerTwo  go to state 128
    var            go to state 65


State 104

   58 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112


State 105

   67 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 129


State 106

   11 funcInnerTwo: statement SEMICOLON funcInnerTwo .

    $default  reduce using rule 11 (funcInnerTwo)


State 107

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 108

   42 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 130


State 109

   39 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 131
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 110

   61 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 132


State 111

   38 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 38 (relation_expr)


State 112

   58 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 113

   63 termInnerOne: expression . COMMA termInnerOne
   64             | expression .

    COMMA  shift, and go to state 133

    $default  reduce using rule 64 (termInnerOne)


State 114

   62 term: ident L_PAREN termInnerOne . R_PAREN

    R_PAREN  shift, and go to state 134


State 115

   18 statement: IF bool_expr THEN stateInnerOne . ENDIF
   19          | IF bool_expr THEN stateInnerOne . ELSE stateInnerOne ENDIF

    ENDIF  shift, and go to state 135
    ELSE   shift, and go to state 136


State 116

   32 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 32 (bool_expr)


State 117

   34 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 34 (relation_and_expr)


State 118

   35 relation_expr: expression comp expression .

    $default  reduce using rule 35 (relation_expr)


State 119

   51 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 51 (expression)


State 120

   50 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 50 (expression)


State 121

   53 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 53 (multiplicative_expr)


State 122

   54 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 54 (multiplicative_expr)


State 123

   55 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 55 (multiplicative_expr)


State 124

   22 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    SEMICOLON  shift, and go to state 137


State 125

   20 statement: WHILE bool_expr BEGINLOOP stateInnerOne . ENDLOOP

    ENDLOOP  shift, and go to state 138


State 126

   27 stateInnerOne: statement SEMICOLON . stateInnerOne
   28              | statement SEMICOLON .

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    $default  reduce using rule 28 (stateInnerOne)

    ident          go to state 42
    statement      go to state 101
    stateInnerOne  go to state 139
    var            go to state 45


State 127

   21 statement: DO BEGINLOOP stateInnerOne ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 140


State 128

   30 stateInnerTwo: var COMMA stateInnerTwo .

    $default  reduce using rule 30 (stateInnerTwo)


State 129

   67 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 67 (var)


State 130

   42 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 42 (relation_expr)


State 131

   39 relation_expr: NOT expression comp expression .

    $default  reduce using rule 39 (relation_expr)


State 132

   61 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 61 (term)


State 133

   63 termInnerOne: expression COMMA . termInnerOne

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    $default  reduce using rule 65 (termInnerOne)

    ident                go to state 53
    expression           go to state 113
    multiplicative_expr  go to state 58
    term                 go to state 59
    termInnerOne         go to state 141
    var                  go to state 60


State 134

   62 term: ident L_PAREN termInnerOne R_PAREN .

    $default  reduce using rule 62 (term)


State 135

   18 statement: IF bool_expr THEN stateInnerOne ENDIF .

    $default  reduce using rule 18 (statement)


State 136

   19 statement: IF bool_expr THEN stateInnerOne ELSE . stateInnerOne ENDIF

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    ident          go to state 42
    statement      go to state 101
    stateInnerOne  go to state 142
    var            go to state 45


State 137

   22 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    bool_expr            go to state 143
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 138

   20 statement: WHILE bool_expr BEGINLOOP stateInnerOne ENDLOOP .

    $default  reduce using rule 20 (statement)


State 139

   27 stateInnerOne: statement SEMICOLON stateInnerOne .

    $default  reduce using rule 27 (stateInnerOne)


State 140

   21 statement: DO BEGINLOOP stateInnerOne ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    bool_expr            go to state 144
    relation_and_expr    go to state 55
    relation_expr        go to state 56
    expression           go to state 57
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 141

   63 termInnerOne: expression COMMA termInnerOne .

    $default  reduce using rule 63 (termInnerOne)


State 142

   19 statement: IF bool_expr THEN stateInnerOne ELSE stateInnerOne . ENDIF

    ENDIF  shift, and go to state 145


State 143

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    SEMICOLON  shift, and go to state 146


State 144

   21 statement: DO BEGINLOOP stateInnerOne ENDLOOP WHILE bool_expr .

    $default  reduce using rule 21 (statement)


State 145

   19 statement: IF bool_expr THEN stateInnerOne ELSE stateInnerOne ENDIF .

    $default  reduce using rule 19 (statement)


State 146

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 42
    var    go to state 147


State 147

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    ASSIGN  shift, and go to state 148


State 148

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP stateInnerOne ENDLOOP

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 5

    ident                go to state 53
    expression           go to state 149
    multiplicative_expr  go to state 58
    term                 go to state 59
    var                  go to state 60


State 149

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP stateInnerOne ENDLOOP

    BEGINLOOP  shift, and go to state 150


State 150

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . stateInnerOne ENDLOOP

    IF        shift, and go to state 34
    FOR       shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 5

    ident          go to state 42
    statement      go to state 101
    stateInnerOne  go to state 151
    var            go to state 45


State 151

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne . ENDLOOP

    ENDLOOP  shift, and go to state 152


State 152

   22 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP .

    $default  reduce using rule 22 (statement)
