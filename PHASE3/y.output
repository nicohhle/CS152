Grammar

    0 $accept: program $end

    1 program: function program
    2        | %empty

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    4 declaration: identifierloop COLON INTEGER
    5            | identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    6 declarationloop: declaration SEMICOLON declarationloop
    7                | %empty

    8 statement: var ASSIGN expression
    9          | IF bool_exp THEN statementloop ENDIF
   10          | IF bool_exp THEN statementloop ELSE statementloop ENDIF
   11          | WHILE bool_exp BEGINLOOP statementloop ENDLOOP
   12          | DO BEGINLOOP statementloop ENDLOOP WHILE bool_exp
   13          | FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP
   14          | READ varloop
   15          | WRITE varloop
   16          | CONTINUE
   17          | RETURN expression

   18 statementloop: statement SEMICOLON statementloop
   19              | statement SEMICOLON

   20 bool_exp: relation_and_exp OR bool_exp
   21         | relation_and_exp

   22 relation_and_exp: notloop AND relation_and_exp
   23                 | notloop

   24 relation_exp: expression comp expression
   25             | TRUE
   26             | FALSE
   27             | L_PAREN bool_exp R_PAREN

   28 notloop: NOT notloop
   29        | relation_exp

   30 comp: EQ
   31     | NEQ
   32     | LT
   33     | GT
   34     | LTE
   35     | GTE

   36 expression: multiplicative_expression
   37           | multiplicative_expression ADD expression
   38           | multiplicative_expression SUB expression

   39 multiplicative_expression: term
   40                          | term MULT multiplicative_expression
   41                          | term DIV multiplicative_expression
   42                          | term MOD multiplicative_expression

   43 term: SUB var
   44     | SUB number
   45     | SUB L_PAREN expression R_PAREN
   46     | var
   47     | number
   48     | L_PAREN expression R_PAREN
   49     | identifier L_PAREN expressionloop R_PAREN

   50 varloop: var
   51        | var COMMA varloop

   52 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier

   54 number: NUMBER

   55 expressionloop: expression COMMA expressionloop
   56               | expression
   57               | %empty

   58 identifier: IDENT

   59 identifierloop: identifier COMMA identifierloop
   60               | identifier


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER <int> (258) 54
    IDENT <std::string> (259) 58
    FUNCTION (260) 3
    BEGIN_PARAMS (261) 3
    END_PARAMS (262) 3
    BEGIN_LOCALS (263) 3
    END_LOCALS (264) 3
    BEGIN_BODY (265) 3
    END_BODY (266) 3
    INTEGER (267) 4 5
    ARRAY (268) 5
    OF (269) 5
    IF (270) 9 10
    THEN (271) 9 10
    ENDIF (272) 9 10
    ELSE (273) 10
    WHILE (274) 11 12
    DO (275) 12
    FOR (276) 13
    BEGINLOOP (277) 11 12 13
    ENDLOOP (278) 11 12 13
    CONTINUE (279) 16
    READ (280) 14
    WRITE (281) 15
    TRUE (282) 25
    FALSE (283) 26
    RETURN (284) 17
    SEMICOLON (285) 3 6 13 18 19
    COLON (286) 4 5
    COMMA (287) 51 55 59
    L_PAREN (288) 27 45 48 49
    R_PAREN (289) 27 45 48 49
    L_SQUARE_BRACKET (290) 5 52
    R_SQUARE_BRACKET (291) 5 52
    ASSIGN (292) 8 13
    EQ (293) 30
    NEQ (294) 31
    LT (295) 32
    LTE (296) 34
    GT (297) 33
    GTE (298) 35
    ADD (299) 37
    SUB (300) 38 43 44 45
    MULT (301) 40
    DIV (302) 41
    MOD (303) 42
    AND (304) 22
    OR (305) 20
    NOT (306) 28


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program <statement> (53)
        on left: 1 2
        on right: 0 1
    function <statement> (54)
        on left: 3
        on right: 1
    declaration <statement> (55)
        on left: 4 5
        on right: 6
    declarationloop <statement> (56)
        on left: 6 7
        on right: 3 6
    statement <statement> (57)
        on left: 8 9 10 11 12 13 14 15 16 17
        on right: 18 19
    statementloop <statement> (58)
        on left: 18 19
        on right: 3 9 10 11 12 13 18
    bool_exp <expression> (59)
        on left: 20 21
        on right: 9 10 11 12 13 20 27
    relation_and_exp <expression> (60)
        on left: 22 23
        on right: 20 21 22
    relation_exp <expression> (61)
        on left: 24 25 26 27
        on right: 29
    notloop <expression> (62)
        on left: 28 29
        on right: 22 23 28
    comp <expression> (63)
        on left: 30 31 32 33 34 35
        on right: 24
    expression <expression> (64)
        on left: 36 37 38
        on right: 8 13 17 24 37 38 45 48 52 55 56
    multiplicative_expression <expression> (65)
        on left: 39 40 41 42
        on right: 36 37 38 40 41 42
    term <statement> (66)
        on left: 43 44 45 46 47 48 49
        on right: 39 40 41 42
    varloop <statement> (67)
        on left: 50 51
        on right: 14 15 51
    var <statement> (68)
        on left: 52 53
        on right: 8 13 43 46 50 51
    number <statement> (69)
        on left: 54
        on right: 5 13 44 47
    expressionloop <expression> (70)
        on left: 55 56 57
        on right: 49 55
    identifier <statement> (71)
        on left: 58
        on right: 3 49 52 53 59 60
    identifierloop <statement> (72)
        on left: 59 60
        on right: 4 5 59


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    IDENT  shift, and go to state 4

    identifier  go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 3


State 4

   58 identifier: IDENT .

    $default  reduce using rule 58 (identifier)


State 5

    3 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    1 program: function program .

    $default  reduce using rule 1 (program)


State 8

    3 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 7 (declarationloop)

    declaration      go to state 10
    declarationloop  go to state 11
    identifier       go to state 12
    identifierloop   go to state 13


State 10

    6 declarationloop: declaration . SEMICOLON declarationloop

    SEMICOLON  shift, and go to state 14


State 11

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop . END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    END_PARAMS  shift, and go to state 15


State 12

   59 identifierloop: identifier . COMMA identifierloop
   60               | identifier .

    COMMA  shift, and go to state 16

    $default  reduce using rule 60 (identifierloop)


State 13

    4 declaration: identifierloop . COLON INTEGER
    5            | identifierloop . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    6 declarationloop: declaration SEMICOLON . declarationloop

    IDENT  shift, and go to state 4

    $default  reduce using rule 7 (declarationloop)

    declaration      go to state 10
    declarationloop  go to state 18
    identifier       go to state 12
    identifierloop   go to state 13


State 15

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS . BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

   59 identifierloop: identifier COMMA . identifierloop

    IDENT  shift, and go to state 4

    identifier      go to state 12
    identifierloop  go to state 20


State 17

    4 declaration: identifierloop COLON . INTEGER
    5            | identifierloop COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

    6 declarationloop: declaration SEMICOLON declarationloop .

    $default  reduce using rule 6 (declarationloop)


State 19

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS . declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 7 (declarationloop)

    declaration      go to state 10
    declarationloop  go to state 23
    identifier       go to state 12
    identifierloop   go to state 13


State 20

   59 identifierloop: identifier COMMA identifierloop .

    $default  reduce using rule 59 (identifierloop)


State 21

    4 declaration: identifierloop COLON INTEGER .

    $default  reduce using rule 4 (declaration)


State 22

    5 declaration: identifierloop COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop . END_LOCALS BEGIN_BODY statementloop END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    5 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26

    number  go to state 27


State 25

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS . BEGIN_BODY statementloop END_BODY

    BEGIN_BODY  shift, and go to state 28


State 26

   54 number: NUMBER .

    $default  reduce using rule 54 (number)


State 27

    5 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY . statementloop END_BODY

    IDENT     shift, and go to state 4
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statement      go to state 38
    statementloop  go to state 39
    var            go to state 40
    identifier     go to state 41


State 29

    5 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 30

    9 statement: IF . bool_exp THEN statementloop ENDIF
   10          | IF . bool_exp THEN statementloop ELSE statementloop ENDIF

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    bool_exp                   go to state 48
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    notloop                    go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 31

   11 statement: WHILE . bool_exp BEGINLOOP statementloop ENDLOOP

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    bool_exp                   go to state 58
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    notloop                    go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 32

   12 statement: DO . BEGINLOOP statementloop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 59


State 33

   13 statement: FOR . var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    IDENT  shift, and go to state 4

    var         go to state 60
    identifier  go to state 41


State 34

   16 statement: CONTINUE .

    $default  reduce using rule 16 (statement)


State 35

   14 statement: READ . varloop

    IDENT  shift, and go to state 4

    varloop     go to state 61
    var         go to state 62
    identifier  go to state 41


State 36

   15 statement: WRITE . varloop

    IDENT  shift, and go to state 4

    varloop     go to state 63
    var         go to state 62
    identifier  go to state 41


State 37

   17 statement: RETURN . expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 65
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 38

   18 statementloop: statement . SEMICOLON statementloop
   19              | statement . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 39

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop . END_BODY

    END_BODY  shift, and go to state 67


State 40

    8 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 41

   52 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier .

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 53 (var)


State 42

    5 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 70


State 43

   25 relation_exp: TRUE .

    $default  reduce using rule 25 (relation_exp)


State 44

   26 relation_exp: FALSE .

    $default  reduce using rule 26 (relation_exp)


State 45

   27 relation_exp: L_PAREN . bool_exp R_PAREN
   48 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    bool_exp                   go to state 71
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    notloop                    go to state 51
    expression                 go to state 72
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 46

   43 term: SUB . var
   44     | SUB . number
   45     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 73

    var         go to state 74
    number      go to state 75
    identifier  go to state 41


State 47

   28 notloop: NOT . notloop

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    relation_exp               go to state 50
    notloop                    go to state 76
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 48

    9 statement: IF bool_exp . THEN statementloop ENDIF
   10          | IF bool_exp . THEN statementloop ELSE statementloop ENDIF

    THEN  shift, and go to state 77


State 49

   20 bool_exp: relation_and_exp . OR bool_exp
   21         | relation_and_exp .

    OR  shift, and go to state 78

    $default  reduce using rule 21 (bool_exp)


State 50

   29 notloop: relation_exp .

    $default  reduce using rule 29 (notloop)


State 51

   22 relation_and_exp: notloop . AND relation_and_exp
   23                 | notloop .

    AND  shift, and go to state 79

    $default  reduce using rule 23 (relation_and_exp)


State 52

   24 relation_exp: expression . comp expression

    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    LTE  shift, and go to state 83
    GT   shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 53

   36 expression: multiplicative_expression .
   37           | multiplicative_expression . ADD expression
   38           | multiplicative_expression . SUB expression

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 36 (expression)


State 54

   39 multiplicative_expression: term .
   40                          | term . MULT multiplicative_expression
   41                          | term . DIV multiplicative_expression
   42                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 39 (multiplicative_expression)


State 55

   46 term: var .

    $default  reduce using rule 46 (term)


State 56

   47 term: number .

    $default  reduce using rule 47 (term)


State 57

   49 term: identifier . L_PAREN expressionloop R_PAREN
   52 var: identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   53    | identifier .

    L_PAREN           shift, and go to state 92
    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 53 (var)


State 58

   11 statement: WHILE bool_exp . BEGINLOOP statementloop ENDLOOP

    BEGINLOOP  shift, and go to state 93


State 59

   12 statement: DO BEGINLOOP . statementloop ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 4
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statement      go to state 38
    statementloop  go to state 94
    var            go to state 40
    identifier     go to state 41


State 60

   13 statement: FOR var . ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    ASSIGN  shift, and go to state 95


State 61

   14 statement: READ varloop .

    $default  reduce using rule 14 (statement)


State 62

   50 varloop: var .
   51        | var . COMMA varloop

    COMMA  shift, and go to state 96

    $default  reduce using rule 50 (varloop)


State 63

   15 statement: WRITE varloop .

    $default  reduce using rule 15 (statement)


State 64

   48 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 97
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 65

   17 statement: RETURN expression .

    $default  reduce using rule 17 (statement)


State 66

   18 statementloop: statement SEMICOLON . statementloop
   19              | statement SEMICOLON .

    IDENT     shift, and go to state 4
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 19 (statementloop)

    statement      go to state 38
    statementloop  go to state 98
    var            go to state 40
    identifier     go to state 41


State 67

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarationloop END_PARAMS BEGIN_LOCALS declarationloop END_LOCALS BEGIN_BODY statementloop END_BODY .

    $default  reduce using rule 3 (function)


State 68

    8 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 99
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 69

   52 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 100
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 70

    5 declaration: identifierloop COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (declaration)


State 71

   27 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 101


State 72

   24 relation_exp: expression . comp expression
   48 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 102
    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    LTE      shift, and go to state 83
    GT       shift, and go to state 84
    GTE      shift, and go to state 85

    comp  go to state 86


State 73

   45 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 103
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 74

   43 term: SUB var .

    $default  reduce using rule 43 (term)


State 75

   44 term: SUB number .

    $default  reduce using rule 44 (term)


State 76

   28 notloop: NOT notloop .

    $default  reduce using rule 28 (notloop)


State 77

    9 statement: IF bool_exp THEN . statementloop ENDIF
   10          | IF bool_exp THEN . statementloop ELSE statementloop ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statement      go to state 38
    statementloop  go to state 104
    var            go to state 40
    identifier     go to state 41


State 78

   20 bool_exp: relation_and_exp OR . bool_exp

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    bool_exp                   go to state 105
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    notloop                    go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 79

   22 relation_and_exp: notloop AND . relation_and_exp

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    relation_and_exp           go to state 106
    relation_exp               go to state 50
    notloop                    go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 80

   30 comp: EQ .

    $default  reduce using rule 30 (comp)


State 81

   31 comp: NEQ .

    $default  reduce using rule 31 (comp)


State 82

   32 comp: LT .

    $default  reduce using rule 32 (comp)


State 83

   34 comp: LTE .

    $default  reduce using rule 34 (comp)


State 84

   33 comp: GT .

    $default  reduce using rule 33 (comp)


State 85

   35 comp: GTE .

    $default  reduce using rule 35 (comp)


State 86

   24 relation_exp: expression comp . expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 107
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 87

   37 expression: multiplicative_expression ADD . expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 108
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 88

   38 expression: multiplicative_expression SUB . expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 109
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 89

   40 multiplicative_expression: term MULT . multiplicative_expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    multiplicative_expression  go to state 110
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 90

   41 multiplicative_expression: term DIV . multiplicative_expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    multiplicative_expression  go to state 111
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 91

   42 multiplicative_expression: term MOD . multiplicative_expression

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    multiplicative_expression  go to state 112
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 92

   49 term: identifier L_PAREN . expressionloop R_PAREN

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    $default  reduce using rule 57 (expressionloop)

    expression                 go to state 113
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    expressionloop             go to state 114
    identifier                 go to state 57


State 93

   11 statement: WHILE bool_exp BEGINLOOP . statementloop ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statement      go to state 38
    statementloop  go to state 115
    var            go to state 40
    identifier     go to state 41


State 94

   12 statement: DO BEGINLOOP statementloop . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 116


State 95

   13 statement: FOR var ASSIGN . number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    NUMBER  shift, and go to state 26

    number  go to state 117


State 96

   51 varloop: var COMMA . varloop

    IDENT  shift, and go to state 4

    varloop     go to state 118
    var         go to state 62
    identifier  go to state 41


State 97

   48 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 102


State 98

   18 statementloop: statement SEMICOLON statementloop .

    $default  reduce using rule 18 (statementloop)


State 99

    8 statement: var ASSIGN expression .

    $default  reduce using rule 8 (statement)


State 100

   52 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


State 101

   27 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 27 (relation_exp)


State 102

   48 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 48 (term)


State 103

   45 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 120


State 104

    9 statement: IF bool_exp THEN statementloop . ENDIF
   10          | IF bool_exp THEN statementloop . ELSE statementloop ENDIF

    ENDIF  shift, and go to state 121
    ELSE   shift, and go to state 122


State 105

   20 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 20 (bool_exp)


State 106

   22 relation_and_exp: notloop AND relation_and_exp .

    $default  reduce using rule 22 (relation_and_exp)


State 107

   24 relation_exp: expression comp expression .

    $default  reduce using rule 24 (relation_exp)


State 108

   37 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 37 (expression)


State 109

   38 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 38 (expression)


State 110

   40 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 40 (multiplicative_expression)


State 111

   41 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 41 (multiplicative_expression)


State 112

   42 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 113

   55 expressionloop: expression . COMMA expressionloop
   56               | expression .

    COMMA  shift, and go to state 123

    $default  reduce using rule 56 (expressionloop)


State 114

   49 term: identifier L_PAREN expressionloop . R_PAREN

    R_PAREN  shift, and go to state 124


State 115

   11 statement: WHILE bool_exp BEGINLOOP statementloop . ENDLOOP

    ENDLOOP  shift, and go to state 125


State 116

   12 statement: DO BEGINLOOP statementloop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 126


State 117

   13 statement: FOR var ASSIGN number . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    SEMICOLON  shift, and go to state 127


State 118

   51 varloop: var COMMA varloop .

    $default  reduce using rule 51 (varloop)


State 119

   52 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 52 (var)


State 120

   45 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 45 (term)


State 121

    9 statement: IF bool_exp THEN statementloop ENDIF .

    $default  reduce using rule 9 (statement)


State 122

   10 statement: IF bool_exp THEN statementloop ELSE . statementloop ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statement      go to state 38
    statementloop  go to state 128
    var            go to state 40
    identifier     go to state 41


State 123

   55 expressionloop: expression COMMA . expressionloop

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    $default  reduce using rule 57 (expressionloop)

    expression                 go to state 113
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    expressionloop             go to state 129
    identifier                 go to state 57


State 124

   49 term: identifier L_PAREN expressionloop R_PAREN .

    $default  reduce using rule 49 (term)


State 125

   11 statement: WHILE bool_exp BEGINLOOP statementloop ENDLOOP .

    $default  reduce using rule 11 (statement)


State 126

   12 statement: DO BEGINLOOP statementloop ENDLOOP WHILE . bool_exp

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    bool_exp                   go to state 130
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    notloop                    go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 127

   13 statement: FOR var ASSIGN number SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    SUB      shift, and go to state 46
    NOT      shift, and go to state 47

    bool_exp                   go to state 131
    relation_and_exp           go to state 49
    relation_exp               go to state 50
    notloop                    go to state 51
    expression                 go to state 52
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 128

   10 statement: IF bool_exp THEN statementloop ELSE statementloop . ENDIF

    ENDIF  shift, and go to state 132


State 129

   55 expressionloop: expression COMMA expressionloop .

    $default  reduce using rule 55 (expressionloop)


State 130

   12 statement: DO BEGINLOOP statementloop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 12 (statement)


State 131

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    SEMICOLON  shift, and go to state 133


State 132

   10 statement: IF bool_exp THEN statementloop ELSE statementloop ENDIF .

    $default  reduce using rule 10 (statement)


State 133

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGINLOOP statementloop ENDLOOP

    IDENT  shift, and go to state 4

    var         go to state 134
    identifier  go to state 41


State 134

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGINLOOP statementloop ENDLOOP

    ASSIGN  shift, and go to state 135


State 135

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGINLOOP statementloop ENDLOOP

    NUMBER   shift, and go to state 26
    IDENT    shift, and go to state 4
    L_PAREN  shift, and go to state 64
    SUB      shift, and go to state 46

    expression                 go to state 136
    multiplicative_expression  go to state 53
    term                       go to state 54
    var                        go to state 55
    number                     go to state 56
    identifier                 go to state 57


State 136

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGINLOOP statementloop ENDLOOP

    BEGINLOOP  shift, and go to state 137


State 137

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP . statementloop ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37

    statement      go to state 38
    statementloop  go to state 138
    var            go to state 40
    identifier     go to state 41


State 138

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 139

   13 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGINLOOP statementloop ENDLOOP .

    $default  reduce using rule 13 (statement)
