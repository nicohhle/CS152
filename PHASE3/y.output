Grammar

    0 $accept: prog_start $end

    1 prog_start: progInner

    2 progInner: function progInner
    3          | %empty

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    5 ident: IDENT

    6 funcInnerParams: declaration SEMICOLON funcInnerParams
    7                | %empty

    8 funcInnerLocals: declaration SEMICOLON funcInnerLocals
    9                | %empty

   10 funcInnerTwo: statement SEMICOLON funcInnerTwo
   11             | %empty

   12 declaration: decInner COLON INTEGER
   13            | decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   14 decInner: ident
   15         | ident COMMA decInner

   16 statement: var ASSIGN expression
   17          | IF bool_expr THEN stateInnerOne ENDIF
   18          | IF bool_expr THEN stateInnerOne ELSE stateInnerOne ENDIF
   19          | WHILE bool_expr BEGINLOOP stateInnerOne ENDLOOP
   20          | DO BEGINLOOP stateInnerOne ENDLOOP WHILE bool_expr
   21          | FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP
   22          | READ stateInnerTwo
   23          | WRITE stateInnerTwo
   24          | CONTINUE
   25          | RETURN expression

   26 stateInnerOne: statement SEMICOLON stateInnerOne
   27              | statement SEMICOLON

   28 stateInnerTwo: var
   29              | var COMMA stateInnerTwo

   30 bool_expr: relation_and_expr
   31          | relation_and_expr OR bool_expr

   32 relation_and_expr: relation_expr
   33                  | relation_expr AND relation_and_expr

   34 relation_expr: expression comp expression
   35              | TRUE
   36              | FALSE
   37              | L_PAREN bool_expr R_PAREN
   38              | NOT expression comp expression
   39              | NOT TRUE
   40              | NOT FALSE
   41              | NOT L_PAREN bool_expr R_PAREN

   42 comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 expression: multiplicative_expr
   49           | multiplicative_expr ADD expression
   50           | multiplicative_expr SUB expression

   51 multiplicative_expr: term
   52                    | term MULT multiplicative_expr
   53                    | term DIV multiplicative_expr
   54                    | term MOD multiplicative_expr

   55 term: var
   56     | NUMBER
   57     | L_PAREN expression R_PAREN
   58     | SUB var
   59     | SUB NUMBER
   60     | SUB L_PAREN expression R_PAREN
   61     | ident L_PAREN termInnerOne R_PAREN

   62 termInnerOne: expression COMMA termInnerOne
   63             | expression
   64             | %empty

   65 var: ident
   66    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    FUNCTION (258) 4
    BEGIN_PARAMS (259) 4
    END_PARAMS (260) 4
    BEGIN_LOCALS (261) 4
    END_LOCALS (262) 4
    BEGIN_BODY (263) 4
    END_BODY (264) 4
    INTEGER (265) 12 13
    ARRAY (266) 13
    OF (267) 13
    IF (268) 17 18
    THEN (269) 17 18
    ENDIF (270) 17 18
    ELSE (271) 18
    FOR (272) 21
    WHILE (273) 19 20
    DO (274) 20
    BEGINLOOP (275) 19 20 21
    ENDLOOP (276) 19 20 21
    CONTINUE (277) 24
    READ (278) 22
    WRITE (279) 23
    AND (280) 33
    OR (281) 31
    NOT (282) 38 39 40 41
    TRUE (283) 35 39
    FALSE (284) 36 40
    RETURN (285) 25
    SUB (286) 50 58 59 60
    ADD (287) 49
    MULT (288) 52
    DIV (289) 53
    MOD (290) 54
    EQ (291) 42
    NEQ (292) 43
    LT (293) 44
    GT (294) 45
    LTE (295) 46
    GTE (296) 47
    SEMICOLON (297) 4 6 8 10 21 26 27
    COLON (298) 12 13
    COMMA (299) 15 29 62
    L_PAREN (300) 37 41 57 60 61
    R_PAREN (301) 37 41 57 60 61
    L_SQUARE_BRACKET (302) 13 66
    R_SQUARE_BRACKET (303) 13 66
    ASSIGN (304) 16 21
    NUMBER <int_val> (305) 13 21 56 59
    IDENT <op_val> (306) 5


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    prog_start <s_semval> (53)
        on left: 1
        on right: 0
    progInner <s_semval> (54)
        on left: 2 3
        on right: 1 2
    function <s_semval> (55)
        on left: 4
        on right: 2
    ident <e_semval> (56)
        on left: 5
        on right: 4 14 15 61 65 66
    funcInnerParams <e_semval> (57)
        on left: 6 7
        on right: 4 6
    funcInnerLocals (58)
        on left: 8 9
        on right: 4 8
    funcInnerTwo (59)
        on left: 10 11
        on right: 4 10
    declaration <e_semval> (60)
        on left: 12 13
        on right: 6 8
    decInner <e_semval> (61)
        on left: 14 15
        on right: 12 13 15
    statement <s_semval> (62)
        on left: 16 17 18 19 20 21 22 23 24 25
        on right: 10 26 27
    stateInnerOne <s_semval> (63)
        on left: 26 27
        on right: 17 18 19 20 21 26
    stateInnerTwo (64)
        on left: 28 29
        on right: 22 23 29
    bool_expr <e_semval> (65)
        on left: 30 31
        on right: 17 18 19 20 21 31 37 41
    relation_and_expr <e_semval> (66)
        on left: 32 33
        on right: 30 31 33
    relation_expr <e_semval> (67)
        on left: 34 35 36 37 38 39 40 41
        on right: 32 33
    comp <c_semval> (68)
        on left: 42 43 44 45 46 47
        on right: 34 38
    expression <e_semval> (69)
        on left: 48 49 50
        on right: 16 21 25 34 38 49 50 57 60 62 63 66
    multiplicative_expr <e_semval> (70)
        on left: 51 52 53 54
        on right: 48 49 50 52 53 54
    term <e_semval> (71)
        on left: 55 56 57 58 59 60 61
        on right: 51 52 53 54
    termInnerOne (72)
        on left: 62 63 64
        on right: 61 62
    var <e_semval> (73)
        on left: 65 66
        on right: 16 21 28 29 55 58


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (progInner)

    prog_start  go to state 2
    progInner   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: progInner .

    $default  reduce using rule 1 (prog_start)


State 4

    2 progInner: function . progInner

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (progInner)

    progInner  go to state 8
    function   go to state 4


State 5

    5 ident: IDENT .

    $default  reduce using rule 5 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 progInner: function progInner .

    $default  reduce using rule 2 (progInner)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (funcInnerParams)

    ident            go to state 11
    funcInnerParams  go to state 12
    declaration      go to state 13
    decInner         go to state 14


State 11

   14 decInner: ident .
   15         | ident . COMMA decInner

    COMMA  shift, and go to state 15

    $default  reduce using rule 14 (decInner)


State 12

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams . END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    6 funcInnerParams: declaration . SEMICOLON funcInnerParams

    SEMICOLON  shift, and go to state 17


State 14

   12 declaration: decInner . COLON INTEGER
   13            | decInner . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 15

   15 decInner: ident COMMA . decInner

    IDENT  shift, and go to state 5

    ident     go to state 11
    decInner  go to state 19


State 16

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS . BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    6 funcInnerParams: declaration SEMICOLON . funcInnerParams

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (funcInnerParams)

    ident            go to state 11
    funcInnerParams  go to state 21
    declaration      go to state 13
    decInner         go to state 14


State 18

   12 declaration: decInner COLON . INTEGER
   13            | decInner COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 19

   15 decInner: ident COMMA decInner .

    $default  reduce using rule 15 (decInner)


State 20

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS . funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 9 (funcInnerLocals)

    ident            go to state 11
    funcInnerLocals  go to state 24
    declaration      go to state 25
    decInner         go to state 14


State 21

    6 funcInnerParams: declaration SEMICOLON funcInnerParams .

    $default  reduce using rule 6 (funcInnerParams)


State 22

   12 declaration: decInner COLON INTEGER .

    $default  reduce using rule 12 (declaration)


State 23

   13 declaration: decInner COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 24

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals . END_LOCALS BEGIN_BODY funcInnerTwo END_BODY

    END_LOCALS  shift, and go to state 27


State 25

    8 funcInnerLocals: declaration . SEMICOLON funcInnerLocals

    SEMICOLON  shift, and go to state 28


State 26

   13 declaration: decInner COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS . BEGIN_BODY funcInnerTwo END_BODY

    BEGIN_BODY  shift, and go to state 30


State 28

    8 funcInnerLocals: declaration SEMICOLON . funcInnerLocals

    IDENT  shift, and go to state 5

    $default  reduce using rule 9 (funcInnerLocals)

    ident            go to state 11
    funcInnerLocals  go to state 31
    declaration      go to state 25
    decInner         go to state 14


State 29

   13 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY . funcInnerTwo END_BODY

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (funcInnerTwo)

    ident         go to state 41
    funcInnerTwo  go to state 42
    statement     go to state 43
    var           go to state 44


State 31

    8 funcInnerLocals: declaration SEMICOLON funcInnerLocals .

    $default  reduce using rule 8 (funcInnerLocals)


State 32

   13 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 33

   17 statement: IF . bool_expr THEN stateInnerOne ENDIF
   18          | IF . bool_expr THEN stateInnerOne ELSE stateInnerOne ENDIF

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    bool_expr            go to state 53
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 34

   21 statement: FOR . var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 60


State 35

   19 statement: WHILE . bool_expr BEGINLOOP stateInnerOne ENDLOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    bool_expr            go to state 61
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 36

   20 statement: DO . BEGINLOOP stateInnerOne ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 62


State 37

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 38

   22 statement: READ . stateInnerTwo

    IDENT  shift, and go to state 5

    ident          go to state 41
    stateInnerTwo  go to state 63
    var            go to state 64


State 39

   23 statement: WRITE . stateInnerTwo

    IDENT  shift, and go to state 5

    ident          go to state 41
    stateInnerTwo  go to state 65
    var            go to state 64


State 40

   25 statement: RETURN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 67
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 41

   65 var: ident .
   66    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 65 (var)


State 42

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo . END_BODY

    END_BODY  shift, and go to state 69


State 43

   10 funcInnerTwo: statement . SEMICOLON funcInnerTwo

    SEMICOLON  shift, and go to state 70


State 44

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 45

   13 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 46

   38 relation_expr: NOT . expression comp expression
   39              | NOT . TRUE
   40              | NOT . FALSE
   41              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 73
    FALSE    shift, and go to state 74
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 76
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 47

   35 relation_expr: TRUE .

    $default  reduce using rule 35 (relation_expr)


State 48

   36 relation_expr: FALSE .

    $default  reduce using rule 36 (relation_expr)


State 49

   58 term: SUB . var
   59     | SUB . NUMBER
   60     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 78
    IDENT    shift, and go to state 5

    ident  go to state 41
    var    go to state 79


State 50

   37 relation_expr: L_PAREN . bool_expr R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    bool_expr            go to state 80
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    expression           go to state 81
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 51

   56 term: NUMBER .

    $default  reduce using rule 56 (term)


State 52

   61 term: ident . L_PAREN termInnerOne R_PAREN
   65 var: ident .
   66    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 82
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 65 (var)


State 53

   17 statement: IF bool_expr . THEN stateInnerOne ENDIF
   18          | IF bool_expr . THEN stateInnerOne ELSE stateInnerOne ENDIF

    THEN  shift, and go to state 83


State 54

   30 bool_expr: relation_and_expr .
   31          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 84

    $default  reduce using rule 30 (bool_expr)


State 55

   32 relation_and_expr: relation_expr .
   33                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 85

    $default  reduce using rule 32 (relation_and_expr)


State 56

   34 relation_expr: expression . comp expression

    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 92


State 57

   48 expression: multiplicative_expr .
   49           | multiplicative_expr . ADD expression
   50           | multiplicative_expr . SUB expression

    SUB  shift, and go to state 93
    ADD  shift, and go to state 94

    $default  reduce using rule 48 (expression)


State 58

   51 multiplicative_expr: term .
   52                    | term . MULT multiplicative_expr
   53                    | term . DIV multiplicative_expr
   54                    | term . MOD multiplicative_expr

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 51 (multiplicative_expr)


State 59

   55 term: var .

    $default  reduce using rule 55 (term)


State 60

   21 statement: FOR var . ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    ASSIGN  shift, and go to state 98


State 61

   19 statement: WHILE bool_expr . BEGINLOOP stateInnerOne ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 62

   20 statement: DO BEGINLOOP . stateInnerOne ENDLOOP WHILE bool_expr

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident          go to state 41
    statement      go to state 100
    stateInnerOne  go to state 101
    var            go to state 44


State 63

   22 statement: READ stateInnerTwo .

    $default  reduce using rule 22 (statement)


State 64

   28 stateInnerTwo: var .
   29              | var . COMMA stateInnerTwo

    COMMA  shift, and go to state 102

    $default  reduce using rule 28 (stateInnerTwo)


State 65

   23 statement: WRITE stateInnerTwo .

    $default  reduce using rule 23 (statement)


State 66

   57 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 103
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 67

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 68

   66 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 104
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 69

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS funcInnerParams END_PARAMS BEGIN_LOCALS funcInnerLocals END_LOCALS BEGIN_BODY funcInnerTwo END_BODY .

    $default  reduce using rule 4 (function)


State 70

   10 funcInnerTwo: statement SEMICOLON . funcInnerTwo

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 11 (funcInnerTwo)

    ident         go to state 41
    funcInnerTwo  go to state 105
    statement     go to state 43
    var           go to state 44


State 71

   16 statement: var ASSIGN . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 106
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 72

   13 declaration: decInner COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (declaration)


State 73

   39 relation_expr: NOT TRUE .

    $default  reduce using rule 39 (relation_expr)


State 74

   40 relation_expr: NOT FALSE .

    $default  reduce using rule 40 (relation_expr)


State 75

   41 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    bool_expr            go to state 107
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    expression           go to state 81
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 76

   38 relation_expr: NOT expression . comp expression

    EQ   shift, and go to state 86
    NEQ  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89
    LTE  shift, and go to state 90
    GTE  shift, and go to state 91

    comp  go to state 108


State 77

   60 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 109
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 78

   59 term: SUB NUMBER .

    $default  reduce using rule 59 (term)


State 79

   58 term: SUB var .

    $default  reduce using rule 58 (term)


State 80

   37 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 110


State 81

   34 relation_expr: expression . comp expression
   57 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 86
    NEQ      shift, and go to state 87
    LT       shift, and go to state 88
    GT       shift, and go to state 89
    LTE      shift, and go to state 90
    GTE      shift, and go to state 91
    R_PAREN  shift, and go to state 111

    comp  go to state 92


State 82

   61 term: ident L_PAREN . termInnerOne R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    $default  reduce using rule 64 (termInnerOne)

    ident                go to state 52
    expression           go to state 112
    multiplicative_expr  go to state 57
    term                 go to state 58
    termInnerOne         go to state 113
    var                  go to state 59


State 83

   17 statement: IF bool_expr THEN . stateInnerOne ENDIF
   18          | IF bool_expr THEN . stateInnerOne ELSE stateInnerOne ENDIF

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident          go to state 41
    statement      go to state 100
    stateInnerOne  go to state 114
    var            go to state 44


State 84

   31 bool_expr: relation_and_expr OR . bool_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    bool_expr            go to state 115
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 85

   33 relation_and_expr: relation_expr AND . relation_and_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    relation_and_expr    go to state 116
    relation_expr        go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 86

   42 comp: EQ .

    $default  reduce using rule 42 (comp)


State 87

   43 comp: NEQ .

    $default  reduce using rule 43 (comp)


State 88

   44 comp: LT .

    $default  reduce using rule 44 (comp)


State 89

   45 comp: GT .

    $default  reduce using rule 45 (comp)


State 90

   46 comp: LTE .

    $default  reduce using rule 46 (comp)


State 91

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


State 92

   34 relation_expr: expression comp . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 117
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 93

   50 expression: multiplicative_expr SUB . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 118
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 94

   49 expression: multiplicative_expr ADD . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 119
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 95

   52 multiplicative_expr: term MULT . multiplicative_expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    multiplicative_expr  go to state 120
    term                 go to state 58
    var                  go to state 59


State 96

   53 multiplicative_expr: term DIV . multiplicative_expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    multiplicative_expr  go to state 121
    term                 go to state 58
    var                  go to state 59


State 97

   54 multiplicative_expr: term MOD . multiplicative_expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    multiplicative_expr  go to state 122
    term                 go to state 58
    var                  go to state 59


State 98

   21 statement: FOR var ASSIGN . NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    NUMBER  shift, and go to state 123


State 99

   19 statement: WHILE bool_expr BEGINLOOP . stateInnerOne ENDLOOP

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident          go to state 41
    statement      go to state 100
    stateInnerOne  go to state 124
    var            go to state 44


State 100

   26 stateInnerOne: statement . SEMICOLON stateInnerOne
   27              | statement . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 101

   20 statement: DO BEGINLOOP stateInnerOne . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 126


State 102

   29 stateInnerTwo: var COMMA . stateInnerTwo

    IDENT  shift, and go to state 5

    ident          go to state 41
    stateInnerTwo  go to state 127
    var            go to state 64


State 103

   57 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111


State 104

   66 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 105

   10 funcInnerTwo: statement SEMICOLON funcInnerTwo .

    $default  reduce using rule 10 (funcInnerTwo)


State 106

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


State 107

   41 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 129


State 108

   38 relation_expr: NOT expression comp . expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 130
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 109

   60 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 110

   37 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


State 111

   57 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


State 112

   62 termInnerOne: expression . COMMA termInnerOne
   63             | expression .

    COMMA  shift, and go to state 132

    $default  reduce using rule 63 (termInnerOne)


State 113

   61 term: ident L_PAREN termInnerOne . R_PAREN

    R_PAREN  shift, and go to state 133


State 114

   17 statement: IF bool_expr THEN stateInnerOne . ENDIF
   18          | IF bool_expr THEN stateInnerOne . ELSE stateInnerOne ENDIF

    ENDIF  shift, and go to state 134
    ELSE   shift, and go to state 135


State 115

   31 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 31 (bool_expr)


State 116

   33 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 33 (relation_and_expr)


State 117

   34 relation_expr: expression comp expression .

    $default  reduce using rule 34 (relation_expr)


State 118

   50 expression: multiplicative_expr SUB expression .

    $default  reduce using rule 50 (expression)


State 119

   49 expression: multiplicative_expr ADD expression .

    $default  reduce using rule 49 (expression)


State 120

   52 multiplicative_expr: term MULT multiplicative_expr .

    $default  reduce using rule 52 (multiplicative_expr)


State 121

   53 multiplicative_expr: term DIV multiplicative_expr .

    $default  reduce using rule 53 (multiplicative_expr)


State 122

   54 multiplicative_expr: term MOD multiplicative_expr .

    $default  reduce using rule 54 (multiplicative_expr)


State 123

   21 statement: FOR var ASSIGN NUMBER . SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    SEMICOLON  shift, and go to state 136


State 124

   19 statement: WHILE bool_expr BEGINLOOP stateInnerOne . ENDLOOP

    ENDLOOP  shift, and go to state 137


State 125

   26 stateInnerOne: statement SEMICOLON . stateInnerOne
   27              | statement SEMICOLON .

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 27 (stateInnerOne)

    ident          go to state 41
    statement      go to state 100
    stateInnerOne  go to state 138
    var            go to state 44


State 126

   20 statement: DO BEGINLOOP stateInnerOne ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 139


State 127

   29 stateInnerTwo: var COMMA stateInnerTwo .

    $default  reduce using rule 29 (stateInnerTwo)


State 128

   66 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 66 (var)


State 129

   41 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 41 (relation_expr)


State 130

   38 relation_expr: NOT expression comp expression .

    $default  reduce using rule 38 (relation_expr)


State 131

   60 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 60 (term)


State 132

   62 termInnerOne: expression COMMA . termInnerOne

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    $default  reduce using rule 64 (termInnerOne)

    ident                go to state 52
    expression           go to state 112
    multiplicative_expr  go to state 57
    term                 go to state 58
    termInnerOne         go to state 140
    var                  go to state 59


State 133

   61 term: ident L_PAREN termInnerOne R_PAREN .

    $default  reduce using rule 61 (term)


State 134

   17 statement: IF bool_expr THEN stateInnerOne ENDIF .

    $default  reduce using rule 17 (statement)


State 135

   18 statement: IF bool_expr THEN stateInnerOne ELSE . stateInnerOne ENDIF

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident          go to state 41
    statement      go to state 100
    stateInnerOne  go to state 141
    var            go to state 44


State 136

   21 statement: FOR var ASSIGN NUMBER SEMICOLON . bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    bool_expr            go to state 142
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 137

   19 statement: WHILE bool_expr BEGINLOOP stateInnerOne ENDLOOP .

    $default  reduce using rule 19 (statement)


State 138

   26 stateInnerOne: statement SEMICOLON stateInnerOne .

    $default  reduce using rule 26 (stateInnerOne)


State 139

   20 statement: DO BEGINLOOP stateInnerOne ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    bool_expr            go to state 143
    relation_and_expr    go to state 54
    relation_expr        go to state 55
    expression           go to state 56
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 140

   62 termInnerOne: expression COMMA termInnerOne .

    $default  reduce using rule 62 (termInnerOne)


State 141

   18 statement: IF bool_expr THEN stateInnerOne ELSE stateInnerOne . ENDIF

    ENDIF  shift, and go to state 144


State 142

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr . SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    SEMICOLON  shift, and go to state 145


State 143

   20 statement: DO BEGINLOOP stateInnerOne ENDLOOP WHILE bool_expr .

    $default  reduce using rule 20 (statement)


State 144

   18 statement: IF bool_expr THEN stateInnerOne ELSE stateInnerOne ENDIF .

    $default  reduce using rule 18 (statement)


State 145

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON . var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    IDENT  shift, and go to state 5

    ident  go to state 41
    var    go to state 146


State 146

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var . ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP

    ASSIGN  shift, and go to state 147


State 147

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN . expression BEGINLOOP stateInnerOne ENDLOOP

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 51
    IDENT    shift, and go to state 5

    ident                go to state 52
    expression           go to state 148
    multiplicative_expr  go to state 57
    term                 go to state 58
    var                  go to state 59


State 148

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression . BEGINLOOP stateInnerOne ENDLOOP

    BEGINLOOP  shift, and go to state 149


State 149

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP . stateInnerOne ENDLOOP

    IF        shift, and go to state 33
    FOR       shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    ident          go to state 41
    statement      go to state 100
    stateInnerOne  go to state 150
    var            go to state 44


State 150

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne . ENDLOOP

    ENDLOOP  shift, and go to state 151


State 151

   21 statement: FOR var ASSIGN NUMBER SEMICOLON bool_expr SEMICOLON var ASSIGN expression BEGINLOOP stateInnerOne ENDLOOP .

    $default  reduce using rule 21 (statement)
